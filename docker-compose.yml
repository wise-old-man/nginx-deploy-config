version: "3"
services:
  ################## Databases ##################
  redis:
    container_name: redis
    image: redis
    networks:
      - generic-network
    env_file:
      - ./.env
  ################## Core ##################
  api:
    container_name: api
    image: wiseoldman/api:latest
    env_file:
      - ./.env
    networks:
      - generic-network
    depends_on:
      - redis
  bot:
    container_name: bot
    image: wiseoldman/discord-bot:latest
    env_file:
      - ./.env
    networks:
      - generic-network
      - metrics-network
  hom-bot:
    container_name: hom-bot
    image: wiseoldman/hom:latest
    env_file:
      - ./.env
  nginx:
    container_name: nginx
    build: .
    networks:
      - generic-network
    ports:
      - 80:80
      - 443:443
    links:
      - api
      - bot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  ################## Metrics ##################
  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.17
    ports:
      - 4000:3000
    volumes:
      - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    networks:
      - metrics-network
    env_file:
      - ./.env
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - metrics-network
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  metrics:
    container_name: metrics
    image: wiseoldman/metrics:latest
    env_file:
      - ./.env
    networks:
      - metrics-network
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - metrics-network
    devices:
      - "/dev/kmsg"
  ################## Utils ##################
  certbot:
    container_name: certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - "54321:80"
networks:
  generic-network:
  metrics-network:
volumes:
  prometheus-data:
  grafana-data:
    external: true
